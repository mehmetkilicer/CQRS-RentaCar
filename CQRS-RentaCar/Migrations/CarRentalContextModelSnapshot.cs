// <auto-generated />
using System;
using CQRS_RentaCar.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CQRS_RentaCar.Migrations
{
    [DbContext(typeof(CarRentalContext))]
    partial class CarRentalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CQRS_RentaCar.DAL.BodyStyle", b =>
                {
                    b.Property<int>("BodyStyleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BodyStyleId"), 1L, 1);

                    b.Property<string>("StyleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BodyStyleId");

                    b.ToTable("BodyStyles");
                });

            modelBuilder.Entity("CQRS_RentaCar.DAL.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"), 1L, 1);

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("CQRS_RentaCar.DAL.CarRental", b =>
                {
                    b.Property<int>("CarRentalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarRentalId"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EndLocationId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StartLocationId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("CarRentalId");

                    b.HasIndex("EndLocationId");

                    b.HasIndex("StartLocationId");

                    b.HasIndex("VehicleId");

                    b.ToTable("CarRentals");
                });

            modelBuilder.Entity("CQRS_RentaCar.DAL.RentalLocation", b =>
                {
                    b.Property<int>("RentalLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RentalLocationId"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RentalLocationId");

                    b.ToTable("RentalLocations");
                });

            modelBuilder.Entity("CQRS_RentaCar.DAL.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"), 1L, 1);

                    b.Property<int>("BodyStyleId")
                        .HasColumnType("int");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<decimal>("DailyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FuelType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gearbox")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Mileage")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RentalLocationId")
                        .HasColumnType("int");

                    b.HasKey("VehicleId");

                    b.HasIndex("BodyStyleId");

                    b.HasIndex("BrandId");

                    b.HasIndex("RentalLocationId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("CQRS_RentaCar.DAL.CarRental", b =>
                {
                    b.HasOne("CQRS_RentaCar.DAL.RentalLocation", "EndLocation")
                        .WithMany("EndRentals")
                        .HasForeignKey("EndLocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CQRS_RentaCar.DAL.RentalLocation", "StartLocation")
                        .WithMany("StartRentals")
                        .HasForeignKey("StartLocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CQRS_RentaCar.DAL.Vehicle", "Vehicle")
                        .WithMany("CarRentals")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EndLocation");

                    b.Navigation("StartLocation");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("CQRS_RentaCar.DAL.Vehicle", b =>
                {
                    b.HasOne("CQRS_RentaCar.DAL.BodyStyle", "BodyStyle")
                        .WithMany("Vehicles")
                        .HasForeignKey("BodyStyleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CQRS_RentaCar.DAL.Brand", "Brand")
                        .WithMany("Vehicles")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CQRS_RentaCar.DAL.RentalLocation", "RentalLocation")
                        .WithMany("Vehicles")
                        .HasForeignKey("RentalLocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BodyStyle");

                    b.Navigation("Brand");

                    b.Navigation("RentalLocation");
                });

            modelBuilder.Entity("CQRS_RentaCar.DAL.BodyStyle", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("CQRS_RentaCar.DAL.Brand", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("CQRS_RentaCar.DAL.RentalLocation", b =>
                {
                    b.Navigation("EndRentals");

                    b.Navigation("StartRentals");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("CQRS_RentaCar.DAL.Vehicle", b =>
                {
                    b.Navigation("CarRentals");
                });
#pragma warning restore 612, 618
        }
    }
}
